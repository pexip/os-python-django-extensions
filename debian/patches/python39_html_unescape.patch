--- a/tests/templatetags/test_syntax_color.py
+++ b/tests/templatetags/test_syntax_color.py
@@ -5,7 +5,7 @@ from tempfile import mkdtemp
 
 from django.template import Context, Template
 from django.test import TestCase
-from six.moves.html_parser import HTMLParser
+import html
 
 from django_extensions.templatetags.syntax_color import generate_pygments_css
 
@@ -55,7 +55,7 @@ class SyntaxColorTagTests(TestCase):
 
         result = Template(content).render(ctx)
 
-        self.assertHTMLEqual(HTMLParser().unescape(result), expected_result)
+        self.assertHTMLEqual(html.unescape(result), expected_result)
 
     def test_should_colorize_table_with_default_lexer(self):
         ctx = Context({'code_string': '<h1>TEST</h1>'})
@@ -78,7 +78,7 @@ class SyntaxColorTagTests(TestCase):
         expected_result = '<h1>TEST</h1>'
         result = Template(content).render(ctx)
 
-        self.assertHTMLEqual(HTMLParser().unescape(result), expected_result)
+        self.assertHTMLEqual(html.unescape(result), expected_result)
 
     def test_should_colorize_noclasses_with_default_lexer(self):
         ctx = Context({'code_string': '<h1>TEST</h1>'})
@@ -99,4 +99,4 @@ class SyntaxColorTagTests(TestCase):
         expected_result = '<h1>TEST</h1>'
         result = Template(content).render(ctx)
 
-        self.assertHTMLEqual(HTMLParser().unescape(result), expected_result)
+        self.assertHTMLEqual(html.unescape(result), expected_result)
